@inherits LayoutComponentBase


@using IntrManApp.Shared.Common;
@using IntrManApp.Shared.Contract;
@using IntrManHybridApp.UI.Services;
@using IntrManHybridApp.UI.Components.Pages.Auth;

@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@inject DialogService DialogService
@inject ContextMenuService ContextMenuService
@inject TooltipService TooltipService
@inject NotificationService NotificationService
@inject IAuthService auth
@inject ILogger<MainLayout> logger


<RadzenComponents />

<RadzenLayout style="grid-template-areas: 'rz-sidebar rz-header' 'rz-sidebar rz-body';">
    <RadzenHeader>
        <RadzenRow JustifyContent="JustifyContent.Start" AlignItems="AlignItems.Center" Gap="0">
            <RadzenColumn Size="5">
                <RadzenStack AlignItems="AlignItems.Center" Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Left" Gap="3">
                    <RadzenSidebarToggle Style="margin-right:2px" Click="@SidebarToggleClick"></RadzenSidebarToggle>
                    <RadzenIcon Icon="@activeIcon" />
                    @activeWindow
                </RadzenStack>
            </RadzenColumn>

            <RadzenColumn Size="7">
                <RadzenStack AlignItems="AlignItems.End" Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.End" Gap="3">
                    <RadzenMenu>
                        <RadzenMenuItem Icon="account_circle" Visible="@(AppUser.Token!=Guid.Empty)" Text="@AppUser.Username" Style="margin-right:48px">
                            <RadzenMenuItem Style="font-size:small;" Text="Change Password" Click="@ChangePassword" Icon="password"></RadzenMenuItem>
                            <RadzenMenuItem Style="font-size:small;" Text="Logout ..." Click="@Logout" Icon="logout"></RadzenMenuItem>
                        </RadzenMenuItem>
                    </RadzenMenu>
                </RadzenStack>
            </RadzenColumn>
        </RadzenRow>
    </RadzenHeader>
    <RadzenBody Expanded="@sidebarExpanded">
        <RadzenRow class="rz-mx-auto rz-px-4 rz-pt-2 rz-pt-md-4 rz-pt-lg-6 rz-pt-xl-12 rz-pb-2 rz-pb-lg-12"
                   Style="margin:10px; padding:0px">
            <RadzenColumn Size="12">
                @Body
            </RadzenColumn>
        </RadzenRow>
    </RadzenBody>
    <RadzenSidebar Expanded="@sidebarExpanded" style="z-index: 2">
        <RadzenStack AlignItems="Radzen.AlignItems.Center" class="rz-py-4 rz-py-lg-6" Style="padding: var(--rz-panel-menu-item-padding); border-bottom: var(--rz-panel-menu-item-border);">
            <RadzenImage Path="images/logo.png" style="width: 96px; height: 96px;" AlternateText="Application logo"></RadzenImage>
            <RadzenText Text="Intrepid Manufacture App" TextStyle="Radzen.Blazor.TextStyle.Subtitle1" class="rz-mb-0" style="color: var(--rz-sidebar-color);" />
        </RadzenStack>
        <RadzenPanelMenu>
            @foreach (var item in AppUser.FeatureAccesses)
            {
                logger.LogInformation($"Adding Feature: {item.Name}");
                <RadzenPanelMenuItem Text="@item.Name" Visible="@item.ChildrenFeatures.Where(c=>c.CanView).Any()" Icon="@item.Icon" Click="setActiveWindow">
                    @foreach (var subItem in item.ChildrenFeatures)
                    {
                        logger.LogInformation($"Adding sub Feature {subItem.Name} to {item.Name}");
                        <RadzenPanelMenuItem Text="@subItem.Name" Icon="@subItem.Icon" Style="margin-left:6px"
                                             Click="setActiveWindow" Path="@subItem.Path" Visible="@subItem.CanView" />
                    }
                </RadzenPanelMenuItem>
            }
        </RadzenPanelMenu>
        <RadzenStack AlignItems="Radzen.AlignItems.Center" Gap="0" class="rz-py-4 rz-py-lg-6" Style="padding: var(--rz-panel-menu-item-padding);">
            <RadzenText Text="Intrepid Manufacture App v1.0.0" TextStyle="Radzen.Blazor.TextStyle.Caption" TagName="Radzen.Blazor.TagName.P" TextAlign="Radzen.TextAlign.Center" />
            <RadzenText Text="Copyright Ⓒ 2024" TextStyle="Radzen.Blazor.TextStyle.Caption" class="rz-mb-0" TagName="Radzen.Blazor.TagName.P" TextAlign="Radzen.TextAlign.Center" />
        </RadzenStack>
    </RadzenSidebar>
</RadzenLayout>

@code {
    bool sidebarExpanded = true;
    string activeWindow = "Home";
    string activeIcon = "home";

    void SidebarToggleClick()
    {
        sidebarExpanded = !sidebarExpanded;
    }

    void setActiveWindow(MenuItemEventArgs args)
    {
        activeWindow = args.Text;
        activeIcon = AppUser.FeatureAccesses.Where(f => f.Name == args.Text).FirstOrDefault()?.Icon ?? string.Empty;
    }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await auth.LoginAsync("", "");
    }

    async Task Logout()
    {
        await auth.LoginAsync("", "");
        NavigationManager.NavigateTo("/");
        activeWindow = "Home";
        activeIcon = "home";
    }

    async Task ChangePassword()
    {
        await DialogService.OpenAsync<ChangePassword>("Change Password",
            new Dictionary<string, object>() { { "Id", AppUser.UserId } },
            new DialogOptions { CloseDialogOnEsc = true, ShowClose = true, Width = "350px", Height = "400px" });
    }
}
